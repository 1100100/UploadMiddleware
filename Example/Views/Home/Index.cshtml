@{
    ViewData["Title"] = "Home Page";
}

@section Styles{
    <link href="~/lib/webuploader/dist/webuploader.min.css" rel="stylesheet" />
}
<div class="text-center">
    <h3>分片上传</h3>
    <div id="uploader" class="wu-example">
        <!--用来存放文件信息-->
        <div id="thelist" class="uploader-list"></div>
        <div class="btns">
            <div id="picker">选择文件</div>
            <button id="ctlBtn" class="btn btn-default">开始上传</button>
        </div>
    </div>
</div>
@section Scripts{
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/webuploader/dist/webuploader.min.js"></script>
    <script>
        $(function () {

            WebUploader.Uploader.register({ "before-send": "beforeSend" }, {
                beforeSend: function (block) {

                    var deferred = $.Deferred();
                    if (block.file.startChunk > 0) {

                        if (block.chunk < block.file.startChunk) {
                            console.log("跳过：" + block.chunk);
                            deferred.reject();
                        }
                        else
                            deferred.resolve();
                    }
                    else
                        deferred.resolve();
                    return deferred.promise();
                }
            });
            var uploader = WebUploader.create({

                // swf文件路径
                swf: '/lib/webuploader/dist/Uploader.swf',
                chunked: true,
                chunkSize: 1024 * 1024,
                threads: 10,
                // 文件接收服务端。
                server: '/upload',
                compress: false,
                // 选择文件的按钮。可选。
                // 内部根据当前运行是创建，可能是input元素，也可能是flash.
                pick: '#picker',

                // 不压缩image, 默认如果是jpeg，文件上传前会压缩一把再上传！
                resize: false,
                //auto: true
            });
            uploader.on('fileQueued', function (file) {

                //console.log(file);
                uploader.md5File(file).then(function (val) {
                    $.ajax({
                        type: "post",
                        url: "/upload?action=chunks",
                        data: {
                            md5: val
                        },
                        success: function (res) {
                            $.extend(file, { startChunk: res.chunks, md5: val });
                        }
                    });
                });

            });

            uploader.on("uploadBeforeSend", function (block, data, headers) {
                //console.log(block);
                //uploader.md5File(block.blob).then(function (val) {
                //    console.log(block.chunk + ":" + val);
                //});
                data.md5 = block.file.md5;
                $.extend(block.file, { chunks: block.chunks });
            });

            uploader.on("uploadSuccess", function (file, res) {
                //console.log(file);
                $.ajax({
                    type: "post",
                    url: "/upload?action=merge",
                    data: {
                        md5: file.md5,
                        chunks: file.chunks
                    },
                    success: function (res) {
                        console.log(res);
                        alert(JSON.stringify(res));
                    }
                });
            });
            uploader.on("uploadFinished", function () {
                uploader.reset();
            });

            $("#ctlBtn").click(function () {
                uploader.upload();
            });
        });

    </script>
}